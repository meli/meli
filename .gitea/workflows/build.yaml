# SPDX-License-Identifier: EUPL-1.2
name: Build and run Tests

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  RUSTFLAGS: "-D warnings -W unreachable-pub -W rust-2021-compatibility -C debuginfo=0"
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.gitea/**'
      - 'melib/src/**'
      - 'melib/Cargo.toml'
      - 'meli/src/**'
      - 'meli/Cargo.toml'
      - 'Cargo.toml'
      - 'Cargo.lock'

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [linux-amd64, linux-arm64]
        include:
          - build: linux-amd64
            arch: amd64
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: linux-arm64
            arch: arm64
            os: ubuntu-latest-arm64
            rust: stable
            target: aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - id: os-deps
        name: install OS dependencies
        run: |
          apt-get update
          apt-get install -y libdbus-1-dev pkg-config mandoc libssl-dev make
      - id: rustup-setup
        name: Install rustup and toolchains
        shell: bash
        run: |
          if ! command -v rustup &>/dev/null; then
            curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused --location --silent --show-error --fail "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
            source "${HOME}/.cargo/env"
            echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH
            echo "CARGO_HOME=${CARGO_HOME:-$HOME/.cargo}" >> $GITHUB_ENV
            rustup toolchain install --profile minimal ${{ matrix.rust }} --target ${{ matrix.target }}
          fi
      - name: Setup Rust target
        run: |
          mkdir -p "${{ env.CARGO_HOME }}"
          cat << EOF > "${{ env.CARGO_HOME }}"/config.toml
          [build]
          target = "${{ matrix.target }}"
          EOF
      - name: Add test dependencies
        run: |
          cargo install --quiet --version 0.9.54 --target "${{ matrix.target }}" cargo-nextest
      - name: cargo-check
        run: |
          make -f ./.gitea/Makefile.build cargo-check
      - name: cargo-test-compiles
        if: success() || failure()
        run: |
          make -f ./.gitea/Makefile.build cargo-test-compiles
      - name: cargo-test
        run: |
          make -f ./.gitea/Makefile.build cargo-test
      - name: rustdoc build
        if: success() || failure()
        run: |
          make -f ./.gitea/Makefile.build rustdoc-build
      - name: rustdoc tests
        if: success() || failure()
        run: |
          make -f ./.gitea/Makefile.build rustdoc-test
